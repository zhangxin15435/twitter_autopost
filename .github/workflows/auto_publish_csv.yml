name: Twitter自动发布 - CSV数据源版本

on:
  # 定时触发: 每天8:00, 14:00, 20:00 (UTC时间)
  schedule:
    - cron: '0 8,14,20 * * *'
  
  # 手动触发
  workflow_dispatch:
    inputs:
      debug_mode:
        description: '调试模式'
        required: false
        default: false
        type: boolean

env:
  PYTHONIOENCODING: utf-8

jobs:
  publish-to-twitter:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 检出代码
      uses: actions/checkout@v4
      
    - name: 🐍 设置Python环境
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: 📦 安装依赖
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: 🔍 验证文件结构
      run: |
        echo "📂 检查文件结构..."
        ls -la
        echo "📄 检查CSV文件..."
        if [ -f "content_data.csv" ]; then
          echo "✅ CSV数据文件存在"
          head -5 content_data.csv
        else
          echo "⚠️ CSV数据文件不存在，将在运行时创建"
        fi
        
    - name: 🔧 检查Python模块
      run: |
        echo "🐍 检查Python模块..."
        python -c "import connect_twitter; print('✅ Twitter模块正常')"
        python -c "import connect_csv; print('✅ CSV模块正常')"
        
    - name: 🚀 执行Twitter自动发布
      env:
        # Twitter API凭证
        TWITTER_CONSUMER_KEY: ${{ secrets.TWITTER_CONSUMER_KEY }}
        TWITTER_CONSUMER_SECRET: ${{ secrets.TWITTER_CONSUMER_SECRET }}
        TWITTER_ACCESS_TOKEN: ${{ secrets.TWITTER_ACCESS_TOKEN }}
        TWITTER_ACCESS_TOKEN_SECRET: ${{ secrets.TWITTER_ACCESS_TOKEN_SECRET }}
        TWITTER_BEARER_TOKEN: ${{ secrets.TWITTER_BEARER_TOKEN }}
        
        # 调试模式
        DEBUG_MODE: ${{ github.event.inputs.debug_mode }}
        
      run: |
        echo "🎯 开始执行Twitter自动发布任务..."
        echo "⏰ 执行时间: $(date -u)"
        echo "🌍 时区: UTC"
        echo "🔧 Python版本: $(python --version)"
        
        if [ "$DEBUG_MODE" = "true" ]; then
          echo "🐛 调试模式已启用"
          python -u main_csv.py --verbose
        else
          python -u main_csv.py
        fi
        
    - name: 📊 发布结果统计
      if: always()
      run: |
        echo "📊 发布任务统计..."
        
        # 检查日志文件
        if [ -f "twitter_publish.log" ]; then
          echo "📝 最新日志 (最后10行):"
          tail -10 twitter_publish.log
          
          echo ""
          echo "📈 统计信息:"
          echo "成功发布数: $(grep -c "成功发布推文" twitter_publish.log || echo "0")"
          echo "错误次数: $(grep -c "ERROR" twitter_publish.log || echo "0")"
        else
          echo "⚠️ 未找到日志文件"
        fi
        
        # 检查CSV文件状态
        if [ -f "content_data.csv" ]; then
          echo ""
          echo "📋 CSV文件状态:"
          python -c "from connect_csv import CSVDataSource; csv_source = CSVDataSource(); stats = csv_source.get_statistics(); print('总内容数:', stats['total']); print('已发布:', stats['published']); print('待发布:', stats['unpublished'])"
        fi
        
    - name: 💾 上传日志文件
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: twitter-publish-logs
        path: |
          twitter_publish.log
          content_data.csv
        retention-days: 30
        
    - name: 🔔 发送通知 (失败时)
      if: failure()
      run: |
        echo "❌ Twitter发布任务失败!"
        echo "⏰ 失败时间: $(date -u)"
        echo "🔍 请检查日志了解详细错误信息"
        
    - name: ✅ 任务完成
      if: success()
      run: |
        echo "🎉 Twitter自动发布任务执行完成!"
        echo "⏰ 完成时间: $(date -u)"
        echo "📅 下次执行: 根据cron调度 (8:00, 14:00, 20:00 UTC)" 